/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package advdisc;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Arces
 */
public class MatrixInput extends javax.swing.JFrame {

    private matrixop operation;
    private matrix a, b, resultInverse, resultDivide;

    private JTextField inputsA[][];
    private JTextField inputsB[][];

    public MatrixInput() {
        operation = matrixop.getInstance();

        initComponents();

        //set cells for matrix a
        a = operation.getFirstMatrix();
        inputPanelA.setLayout(new GridLayout(a.getRow(), a.getCol()));

        inputsA = new JTextField[a.getRow()][a.getCol()];

        for (int i = 0; i < a.getRow(); i++) {
            for (int j = 0; j < a.getCol(); j++) {
                inputsA[i][j] = new JTextField();
                inputsA[i][j].setHorizontalAlignment(JTextField.CENTER);
                inputPanelA.add(inputsA[i][j]);
            }
        }
        inputPanelA.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix A [" + a.getRow() + " x " + a.getCol() + "]", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 2, 18), new java.awt.Color(153, 153, 153))); // NOI18N

        //set cells for matrix b
        b = operation.getSecondMatrix();
        inputPanelB.setLayout(new GridLayout(b.getRow(), b.getCol()));

        inputsB = new JTextField[b.getRow()][b.getCol()];

        for (int i = 0; i < b.getRow(); i++) {
            for (int j = 0; j < b.getCol(); j++) {
                inputsB[i][j] = new JTextField();
                inputsB[i][j].setHorizontalAlignment(JTextField.CENTER);
                inputPanelB.add(inputsB[i][j]);
            }
        }
        inputPanelB.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix B [" + b.getRow() + " x " + b.getCol() + "]", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 2, 18), new java.awt.Color(153, 153, 153))); // NOI18N

        this.setTitle("Welcome! Please fill up the matrices");
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = this.getSize().width;
        int h = this.getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        this.setLocation(x, y);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        BackBtn = new javax.swing.JButton();
        inputPanelA = new javax.swing.JPanel();
        inputPanelB = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        divideBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(228, 228, 252));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 102));
        jLabel1.setText("Matrix Division");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Step 2: Fill in the matrices");

        BackBtn.setBackground(new java.awt.Color(222, 222, 222));
        BackBtn.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        BackBtn.setText("<- Go Back");
        BackBtn.setFocusable(false);
        BackBtn.setName("divideBtn"); // NOI18N
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel3))
                    .addComponent(jLabel1))
                .addGap(311, 311, 311))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BackBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        inputPanelA.setBackground(new java.awt.Color(241, 241, 247));
        inputPanelA.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix A", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 2, 18), new java.awt.Color(153, 153, 153))); // NOI18N
        inputPanelA.setFocusable(false);
        inputPanelA.setPreferredSize(new java.awt.Dimension(450, 450));

        javax.swing.GroupLayout inputPanelALayout = new javax.swing.GroupLayout(inputPanelA);
        inputPanelA.setLayout(inputPanelALayout);
        inputPanelALayout.setHorizontalGroup(
            inputPanelALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );
        inputPanelALayout.setVerticalGroup(
            inputPanelALayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 418, Short.MAX_VALUE)
        );

        inputPanelB.setBackground(new java.awt.Color(241, 241, 247));
        inputPanelB.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Matrix B", javax.swing.border.TitledBorder.RIGHT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 2, 18), new java.awt.Color(153, 153, 153))); // NOI18N
        inputPanelB.setPreferredSize(new java.awt.Dimension(450, 450));

        javax.swing.GroupLayout inputPanelBLayout = new javax.swing.GroupLayout(inputPanelB);
        inputPanelB.setLayout(inputPanelBLayout);
        inputPanelBLayout.setHorizontalGroup(
            inputPanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 438, Short.MAX_VALUE)
        );
        inputPanelBLayout.setVerticalGroup(
            inputPanelBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addComponent(inputPanelA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inputPanelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(inputPanelA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputPanelB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 5, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(228, 228, 252));

        divideBtn.setBackground(new java.awt.Color(222, 222, 222));
        divideBtn.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        divideBtn.setText("Divide!");
        divideBtn.setFocusable(false);
        divideBtn.setName("divideBtn"); // NOI18N
        divideBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(divideBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(325, 325, 325))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(divideBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 912, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void divideBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideBtnActionPerformed
        System.out.println("HEHE");
        String temp;
        boolean isValid = true;

        //store inputs of A in matrix
        a.defineMatrix();
        for (int i = 0; i < a.getRow() && isValid; i++) {
            for (int j = 0; j < a.getCol() && isValid; j++) {
                temp = inputsA[i][j].getText();
                System.out.println("tempA = " + temp);
                try {
                    if (temp.contains("/")) {
                        String[] tempNums = temp.split("/");
                        Float x = Float.parseFloat(tempNums[0]) / Float.parseFloat(tempNums[1]);
                        a.setValue(i, j, x);
                    } else {
                        a.setValue(i, j, Float.parseFloat(temp));
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Please input a valid number or fraction!", "Invalid Input in Matrix A!", JOptionPane.WARNING_MESSAGE);
                    isValid = false;
                }
            }
        }

        b.defineMatrix();
        //store inputs of B in matrix
        for (int i = 0; i < b.getRow() && isValid; i++) {
            for (int j = 0; j < b.getCol() && isValid; j++) {
                temp = inputsB[i][j].getText();

                try {
                    if (temp.contains("/")) {
                        String[] tempNums = temp.split("/");
                        Float x = Float.parseFloat(tempNums[0]) / Float.parseFloat(tempNums[1]);
                        b.setValue(i, j, x);
                    } else {
                        b.setValue(i, j, Float.parseFloat(temp));
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Please input a valid number or fraction!", "Invalid Input in Matrix B!", JOptionPane.WARNING_MESSAGE);
                    isValid = false;
                }
            }
        }

        if (isValid) {
            resultInverse = operation.getInverse(b);
            if (resultInverse != null) {
                resultDivide = operation.multiplyMatrix(a, resultInverse);
                operation.setFirstMatrix(resultInverse);
                operation.setSecondMatrix(resultDivide);
                dispose();
                new MatrixResult().setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Inverse of B doesn't exist!", "Error!", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_divideBtnActionPerformed

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        int ans = JOptionPane.showConfirmDialog(null, "Go back to setting the size of the matrices?", "Go Back", JOptionPane.YES_NO_OPTION);

        if (ans == 0) {
            dispose();
            new MatrixSet().setVisible(true);
        }
    }//GEN-LAST:event_BackBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton divideBtn;
    private javax.swing.JPanel inputPanelA;
    private javax.swing.JPanel inputPanelB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
